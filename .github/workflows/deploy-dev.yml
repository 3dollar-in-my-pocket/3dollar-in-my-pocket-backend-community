name: "개발계 배포"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release Version"
        required: true
        type: string

jobs:
  deploy:
    name: community-deploy
    runs-on: ubuntu-latest
    needs:
      - ci
    environment: "dev"
    steps:
      - name: checkout@v1
        uses: actions/checkout@v1

      - name: Get Version
        id: version
        run: |
          VERSION = ${VERSIONING#v}-${{ github.run_id }}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        env:
          VERSIONING: ${{ github.event.inputs.version }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{  secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{  secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
          distribution: temurin
          cache: gradle

      - name: Release Community API Image
        id: release-api
        run: |
          ./gradlew threedollar-community:jib -Dimage=${DOCKER_REGISTRY}/${DOCKER_REPOSITORY} -Dtag=${IMAGE_TAG} -Dprofile=DEV -DcollectorIp=${PINPOINT_COLLECTOR_IP_DEV}

          echo "image=${DOCKER_REGISTRY}/${DOCKER_REPOSITORY}:${IMAGE_TAG}" >> $GITHUB_OUTPUT
          echo "🐇 Release Community API Image >> ${DOCKER_REPOSITORY}:${IMAGE_TAG}
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          DOCKER_REPOSITORY: threedollar-community-api
          IMAGE_TAG: ${{  steps.version.outputs.version }}
          # PINPOINT_COLLECTOR_IP_DEV: ${{  secrets.PINPOINT_COLLECTOR_IP_DEV }}

      - name: Download task definition
        id: download-task-definition
        run:  |
          aws ecs describe --task-definition threedollar-community-dev --query taskDefinition > task-definition-community-dev.json
          echo "task-definition=$GITHUB_WORKSPACE/task-definition-community-dev.json" >> $GITHUB_OUTPUT

      - name: Update Amazon ECS task definition
        id: render-api-container
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{  steps.download-task-definition.outputs.task-definition  }}
          container-name: threedollar-community-dev
          image: ${{  steps.release-api.outputs.image }}


